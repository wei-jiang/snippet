
sudo sed -i 's/http:\/\/cn./http:\/\//g' /etc/apt/sources.list
sudo rm -rf /var/lib/apt/lists/*
sudo apt-get update

find /var/lib/nginx/proxy -type f -regex '.+/[0-9]+$' | xargs -I '{}' rm
"{}"

//macOSX flush dns cache
sudo dscacheutil -flushcache

//gitolite setup procedure
sudo adduser --system --shell /bin/bash --group --disabled-password --home /home/git git
sudo apt-get install gitolite3
scp ~/.ssh/id_rsa.pub david@192.168.1.188:/home/david/
sudo su - git
gitolite setup -pk /home/david/*.pub


ssh git@hostname info
//generate key pair
ssh-keygen -t rsa

cat /proc/version
uname -a
lsb_release -a
cat /etc/issue


git remote set-url origin https://github.com/USERNAME/OTHERREPOSITORY.git
<?php
/* Redirect browser */
 header('Location: http://' . $_SERVER['HTTP_HOST'] . '/cmsmadesimple/');
/* Make sure that code below does not get executed when we redirect. */
exit;
?>
openssl req -new -newkey rsa:4096 -nodes -keyout freego.key -out freego.csr
openssl x509 \
       -signkey freego.key \
       -in freego.csr \
       -req -days 2048 -out freego.crt

Installing NginX 1.9.2 in Ubuntu server 14.04.2 LTS
Since the version of NginX in Ubuntu Server 14.04.2 is only 1.4.6, we need to tell APT to install the more recent version of nginx directly from the NginX maintainer.
Steps:
Add the following lines in /etc/apt/sources.list
deb http://nginx.org/packages/mainline/ubuntu/ trusty nginx
deb-src http://nginx.org/packages/mainline/ubuntu/ trusty nginx

From your server download the signing key add it to the apt program keyring with the following commands:
sudo wget -qO - http://nginx.org/keys/nginx_signing.key | sudo apt-key add -



Install NginX:
apt-get update
apt-get install nginx

Verify its version:
/usr/sbin/nginx -V

nginx version: nginx/1.9.2
You’re off and running
sudo apt-get purge nginx nginx-common
sudo apt-get install nginx

location ~ \.php$ {
    include fastcgi_params;
    fastcgi_pass  127.0.0.1:9000;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;
}

//node bb
sudo apt-get install libkrb5-dev

./letsencrypt-auto certonly --standalone --agree-tos  --email ww@wwpp.date -d wwpp.date -d mygirl.site -d piao.gift -d novice.ren -d freeland.online

curl -sL https://deb.nodesource.com/setup_5.x | sudo -E bash -
sudo apt-get install -y nodejs
//If your npm is broken
curl -L https://www.npmjs.org/install.sh | sh

/etc/letsencrypt/live/wwpp.date/fullchain.pem

./letsencrypt-auto certonly --standalone --agree-tos  --email david@cninone.com -d ily365.cn -d shop.ily365.cn -d go.ily365.cn -d game.ily365.cn -d bbs.ily365.cn -d www.ily365.cn -d admin.ily365.cn

//enable gitignore
git rm -r --cached .
git add .
git commit -m ".gitignore is now working"

apt-get install php7.0-cli php7.0-common  php7.0 php7.0-mysql php7.0-fpm php7.0-curl php7.0-gd 

docker commit ac6820e5f8f0 novice/freego
//mysql 服务只能本机访问，不对外公开
docker run -p 222:22 -p 80:80 -v /Users/piao/workspace/docker_test:/var/www:rw -d --name fg -t novice/freego
docker run -p 222:22 -p 80:80 -d --name fg -t test

xz -d **.tar.xz
tar -xv -f **.tar
//or
tar xvJf  ***.tar.xz来解压
tar cvJf <archive.tar.xz> <files>
tar cf - directory/ | xz -zf - > directory.tar.xz

sudo service --status-all
sudo initctl list

# possibility 1:
printf '%s\n\t%s\n' 'Host localhost' 'ForwardAgent yes' >> file.txt

# possibility 2:
echo "line 1
line 2" >> greetings.txt

# possibility 3:
cat <<EOT >> greetings.txt
line 1
line 2
EOT

cat ~/.ssh/id_rsa.pub | ssh kjy "mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys"
//and for SELinux also do: restorecon -R -v ~/.ssh

cat /proc/cpuinfo | grep processor | wc -l

wget https://nginx.org/keys/nginx_signing.key -O - | sudo apt-key add -
sudo vi /etc/apt/sources.list
//or xenial
deb http://nginx.org/packages/mainline/ubuntu/ trusty nginx
deb-src http://nginx.org/packages/mainline/ubuntu/ trusty nginx

$ sudo apt-get remove nginx-common
$ sudo apt-get update
$ sudo apt-get install nginx

Run NGINX Open Source:
$ sudo nginx
Verify that NGINX Open Source is up and running:
$ curl -I 127.0.0.1
HTTP/1.1 200 OK
Server: nginx/1.11.5

sudo fdisk -l
sudo mkfs.ext4 /dev/vdb
sudo mkdir /data
sudo echo '/dev/vdb  /data ext4    defaults    0  0' >> /etc/fstab  
sudo mount -a

docker run --name gh -v /data/blog:/var/lib/ghost -p 8080:2368 -d ghost
docker run --name gh -v /data/blog:/var/lib/ghost -p 8080:2368 -e NODE_ENV=production ghost

sudo useradd -m -d /data/dl dl
sudo passwd dl

top
us: user cpu time (or) % CPU time spent in user space
sy: system cpu time (or) % CPU time spent in kernel space
ni: user nice cpu time (or) % CPU time spent on low priority processes
id: idle cpu time (or) % CPU time spent idle
wa: io wait cpu time (or) % CPU time spent in wait (on disk)
hi: hardware irq (or) % CPU time spent servicing/handling hardware interrupts
si: software irq (or) % CPU time spent servicing/handling software interrupts
st: steal time - - % CPU time in involuntary wait by virtual cpu while hypervisor is servicing another processor (or) % CPU time stolen from a virtual machine

16.04
sudo apt-get update
sudo apt-get install coturn

#sudo turnadmin -a -u freego -p freego2017 -r yunyougo.com
sudo vi /etc/turnserver.conf
# Coturn TURN SERVER configuration file
lt-cred-mech
user=freego:freego2017
realm=yunyougo.com
# end
sudo apt-get install supervisor
sudo vi /etc/supervisor/conf.d/coturn.conf

[program:coturn]
command=/usr/bin/turnserver
priority=3
autostart=true
autorestart=true

sudo systemctl enable supervisor
sudo systemctl start supervisor

nohup turnserver &
//install mail server
14.04
sudo apt-get install postfix
sudo dpkg-reconfigure postfix
1. Internet Site
2. freego.com
3. freego
4. freego.com, localhost.localdomain, localhost
5. No
6. 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128 192.168.0.0/24
7. 0
8. +
9. all
sudo vi /etc/postfix/main.cf
//change
smtpd_tls_cert_file=/etc/letsencrypt/live/all/fullchain.pem
smtpd_tls_key_file=/etc/letsencrypt/live/all/privkey.pem
//add belows
home_mailbox = Maildir/
smtpd_sasl_type = dovecot
smtpd_sasl_path = private/auth
smtpd_sasl_local_domain =
smtpd_sasl_security_options = noanonymous
broken_sasl_auth_clients = yes
smtpd_sasl_auth_enable = yes
smtpd_recipient_restrictions = permit_sasl_authenticated,permit_mynetworks,reject_unauth_destination
smtp_tls_security_level = may
smtpd_tls_security_level = may
smtp_tls_note_starttls_offer = yes
smtpd_tls_loglevel = 1
smtpd_tls_received_header = yes

sudo vi /etc/postfix/master.cf
//uncomment below lines
submission inet n       -       -       -       -       smtpd
  -o syslog_name=postfix/submission
  -o smtpd_tls_security_level=encrypt
  -o smtpd_sasl_auth_enable=yes
#  -o smtpd_reject_unlisted_recipient=no
#  -o smtpd_client_restrictions=$mua_client_restrictions
#  -o smtpd_helo_restrictions=$mua_helo_restrictions
#  -o smtpd_sender_restrictions=$mua_sender_restrictions
#  -o smtpd_recipient_restrictions=
  -o smtpd_relay_restrictions=permit_sasl_authenticated,reject
  -o milter_macro_daemon_name=ORIGINATING
smtps     inet  n       -       -       -       -       smtpd
  -o syslog_name=postfix/smtps
  -o smtpd_tls_wrappermode=yes
  -o smtpd_sasl_auth_enable=yes
#  -o smtpd_reject_unlisted_recipient=no
#  -o smtpd_client_restrictions=$mua_client_restrictions
#  -o smtpd_helo_restrictions=$mua_helo_restrictions
#  -o smtpd_sender_restrictions=$mua_sender_restrictions
#  -o smtpd_recipient_restrictions=
  -o smtpd_relay_restrictions=permit_sasl_authenticated,reject
  -o milter_macro_daemon_name=ORIGINATING
sudo apt-get install dovecot-common
Issue the following values for the prompts during installation.
1. yes
2. mail.freego.com
sudo vi /etc/dovecot/conf.d/10-master.conf
# Postfix smtp-auth  ( line no:95 )
unix_listener /var/spool/postfix/private/auth {
mode = 0660
user = postfix
group = postfix
}  
sudo vi /etc/dovecot/conf.d/10-auth.conf file and find (line no:100)
auth_mechanisms = plain
and replace
auth_mechanisms = plain login
sudo service postfix restart
sudo service dovecot restart
sudo apt-get install dovecot-imapd dovecot-pop3d

sudo vi /etc/dovecot/conf.d/10-mail.conf file and find (Line no:30 )
mail_location = mbox:~/mail:INBOX=/var/mail/%u
Replace with
mail_location = maildir:~/Maildir

sudo vi /etc/dovecot/conf.d/20-pop3.conf file and find and uncomment the below line ( Line no : 50 )
pop3_uidl_format = %08Xu%08Xv

sudo vi /etc/dovecot/conf.d/10-ssl.conf file and find and uncomment the below line ( Line no : 6 )
ssl = yes
ssl_cert = </etc/letsencrypt/live/all/fullchain.pem
ssl_key = </etc/letsencrypt/live/all/privkey.pem

sudo service dovecot restart
Create some users and check using mail clients like thunderbird or outlook
sudo useradd -m david -s /sbin/nologin
sudo passwd david
http://www.krizna.com/ubuntu/setup-mail-server-ubuntu-14-04/
sudo systemctl restart postfix dovecot
//16.04
sudo apt-get install postfix dovecot-core dovecot-imapd dovecot-pop3d
vi /etc/dovecot/dovecot.conf
protocols = pop3 pop3s imap imaps




Uninstall salt-minion
To remove just salt-minion package itself from Ubuntu 14.04 (Trusty Tahr) execute on terminal:

sudo apt-get remove salt-minion
Uninstall salt-minion and it's dependent packages
To remove the salt-minion package and any other dependant package which are no longer needed from Ubuntu Trusty.

sudo apt-get remove --auto-remove salt-minion
Purging salt-minion
If you also want to delete configuration and/or data files of salt-minion from Ubuntu Trusty then this will work:

sudo apt-get purge salt-minion
To delete configuration and/or data files of salt-minion and it's dependencies from Ubuntu Trusty then execute:

sudo apt-get purge --auto-remove salt-minion

novice.ren remote login passwd:932895