docker exec -t ww mysql -uroot -pfreego -e 'show status like "wsrep_cluster_size"'

ww$ docker run -d -p 40022:22 -p 40080:80 -p 40443:443 -p 43306:3306 -p 44567:44567 -p 44444:44444 -p 44568:44568 \
--name aly novice/lemp --wsrep-cluster-address=gcomm:// \
--wsrep-node-address=192.168.99.101:44567 --wsrep-sst-receive-address=192.168.99.101:44444 \
--wsrep-provider-options="ist.recv_addr=192.168.99.101:44568"

pp$ docker run -d -p 40022:22 -p 40080:80 -p 40443:443  -p 43306:3306 -p 44567:44567 -p 44444:44444 -p 44568:44568 \
--name ub novice/lemp --wsrep-cluster-address=gcomm://192.168.99.101:44567 \
--wsrep-node-address=192.168.99.102:44567 --wsrep-sst-receive-address=192.168.99.102:44444 \
--wsrep-provider-options="ist.recv_addr=192.168.99.102:44568"

default$ docker run -d -p 40022:22 -p 40080:80 -p 40443:443  -p 43306:3306 -p 44567:44567 -p 44444:44444 -p 44568:44568 \
--name ub2 novice/lemp --wsrep-cluster-address=gcomm://192.168.99.101:44567 \
--wsrep-node-address=192.168.99.100:44567 --wsrep-sst-receive-address=192.168.99.100:44444 \
--wsrep-provider-options="ist.recv_addr=192.168.99.100:44568"

//docker galera cluster
eval $(weave env)
docker run -p 50022:22 -p 50080:80 -p 50443:443 -d \
-v /fg_data/apps/msg:/var/www:rw \
--name msg -t novice/lemp 


docker run -p 40022:22 -p 40080:80 -p 40443:443 -p 3306:3306 -p 4567:4567 -p 4444:4444 -p 4568:4568 -d \
-v /fg_data/apps/oc:/var/www:rw \
-v /fg_data/mysql:/var/lib/mysql  \
--name aly -t novice/lemp \
--wsrep-cluster-address=gcomm:// --wsrep-node-address=120.25.64.88

docker run -p 40022:22 -p 40080:80 -p 40443:443 -p 3306:3306 -p 4567:4567 -p 4444:4444 -p 4568:4568 -d \
--name ub -t novice/lemp \
--wsrep-cluster-address=gcomm://120.25.64.88,aly,192.168.169.22 --wsrep-node-address=192.168.169.11,192.168.0.188

docker run -p 40022:22 -p 40080:80 -p 40443:443 -p 3306:3306 -p 4567:4567 -p 4444:4444 -p 4568:4568 -d \
--name ub2 -t novice/lemp \
--wsrep-cluster-address=gcomm://192.168.169.11 --wsrep-node-address=192.168.169.22
、、、、、、、、、、、、、、、、、
aly$ docker run -d -p 40022:22 -p 40080:80 -p 40443:443 -p 43306:3306 -p 44567:44567 -p 44444:44444 -p 44568:44568 \
-v /fg_data/apps/oc:/var/www:rw \
-v /fg_data/mysql:/var/lib/mysql  \
--name aly novice/lemp --wsrep-cluster-address=gcomm:// \
--wsrep-node-address=120.25.64.88:44567 --wsrep-sst-receive-address=120.25.64.88:44444 \
--wsrep-provider-options="ist.recv_addr=120.25.64.88:44568"

ub$ docker run -d -p 40022:22 -p 40080:80 -p 40443:443  -p 43306:3306 -p 44567:44567 -p 44444:44444 -p 44568:44568 \
-v /var/www/oc:/var/www:rw \
-v /var/lib/mysql:/var/lib/mysql  \
--name ub novice/lemp --wsrep-cluster-address=gcomm://120.25.64.88:44567 \
--wsrep-node-address=192.168.169.11:44567 --wsrep-sst-receive-address=192.168.169.11:44444 \
--wsrep-provider-options="ist.recv_addr=192.168.169.11:44568"

ub2$ docker run -d -p 40022:22 -p 40080:80 -p 40443:443  -p 43306:3306 -p 44567:44567 -p 44444:44444 -p 44568:44568 \
--name ub2 novice/lemp --wsrep-cluster-address=gcomm://192.168.169.11:44567 \
--wsrep-node-address=192.168.169.22:44567 --wsrep-sst-receive-address=192.168.169.22:44444 \
--wsrep-provider-options="ist.recv_addr=192.168.169.22:44568"
、、、、、、、、、、、、、、、、、、
docker run -it --name image-dev ubuntu:latest /bin/bash
docker commit -a "david@cninone.com" -m "Added git" image-dev ubuntu-git
docker save novice/lemp | xz > lemp.tar.xz
docker load < lemp.tar.xz
docker load -i lemp.tar.xz

docker run --name lemp novice/lemp
docker export --output lemp.tar lemp
docker export lemp | xz > lemp_export.tar.xz
cat lemp_export.tar.xz | sudo docker import - novice/lemp
docker import - novice/lemp < lemp_export.tar.xz
docker run -p 40022:22 -p 40080:80 -p 40443:443 -p 43306:3306 -d --name lemp -t novice/lemp supervisord

CREATE USER 'david'@'localhost' IDENTIFIED BY 'freego';
CREATE USER 'david'@'%' IDENTIFIED BY 'freego'; 
GRANT ALL ON *.* TO 'david'@'localhost';
GRANT ALL ON *.* TO 'david'@'%';
flush privileges;
mysql -h 192.168.0.188 -P 43306 -udavid -pfreego
mysql -h 192.168.0.254 -P 3306 -udavid -pfreego
mysql -h ub -P 3306 -udavid -pfreego
//cninone用5000开头的端口
//oudear用6000开头的端口
//第三方服务器用10000以上的端口
//四川的分10022 ubuntu
//公司开发人员用20000开始的端口:kingsley(21000),david(20000),tonya(22000),gene(23000),jos(24000),guoyu(25000)
//oc测试用30000端口
//in /data
docker run -d --name ha -v /data/config/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro -v /data/config/haproxy/haproxycert.pem:/etc/ssl/private/haproxycert.pem haproxy
docker cp ng:/etc/letsencrypt /data/letsencrypt

docker run --name ng -d -p 80:80 -p 443:443 -v /var/run/docker.sock:/tmp/docker.sock:ro novice/nginx-proxy
docker run --name ng -p 7922:22 -p 80:80 -p 443:443 -v /data/config/nginx:/etc/nginx:ro -d -t novice/nginx
docker exec -it ng bash
kill -HUP $( cat /var/run/nginx.pid )
apt-get -qq update
apt-get -qq -y install curl
docker run --name pg -d -v /data/postgre_data:/var/lib/postgresql/data -e POSTGRES_USER=odoo -e POSTGRES_PASSWORD=freego postgres
docker run -e VIRTUAL_HOST=oudear.com,www.oudear.com -e VIRTUAL_PORT=8069 --name odoo --link pg:db -d -t odoo

docker run -e VIRTUAL_HOST=cninone.com,www.cninone.com -p 5022:22 -p 5080:80 -p 5443:443 -d --name cn -t novice/lemp

docker run -p 6022:22 -p 6080:80 -p 6443:443 -p 3306:3306 -d --name lemp -t novice/lemp
docker run -p 11022:22 -d --name co -t novice/centos
docker run -p 10022:22 -d --name ub -t novice/ubuntu


sudo docker run -it --rm -p 443:443 -p 80:80 --name letsencrypt \
            -v "/etc/letsencrypt:/etc/letsencrypt" \
            -v "/var/lib/letsencrypt:/var/lib/letsencrypt" \
            novice/letsencrypt:latest /bin/bash
cd /letsencrypt/letsencrypt && ./letsencrypt-auto certonly --standalone --agree-tos  --email david@cninone.com -d cninone.com -d shop.cninone.com -d go.cninone.com -d yun.cninone.com -d cloud.cninone.com -d bbs.cninone.com -d oudear.com -d shop.oudear.com -d crm.oudear.com -d erp.oudear.com -d go.oudear.com

docker run --rm -it ubuntu bash
docker run --name mos -it ubuntu bash

sudo docker run -it --rm -p 443:443 -p 80:80 --name letsencrypt \
            -v "/etc/letsencrypt:/etc/letsencrypt" \
            -v "/var/lib/letsencrypt:/var/lib/letsencrypt" \
            quay.io/letsencrypt/letsencrypt:latest auth
cninone.com  shop.cninone.com  go.cninone.com  yun.cninone.com  cloud.cninone.com  bbs.cninone.com  oudear.com  shop.oudear.com  crm.oudear.com  erp.oudear.com  go.oudear.com

//team number
docker run -e VIRTUAL_HOST=kingsley.cninone.com -v /data/team/kingsley:/data -p 21022:22 -d --name kingsley -t novice/lemp
docker run -e VIRTUAL_HOST=tonya.cninone.com -v /data/team/tonya:/data -p 22022:22 -d --name tonya -t novice/lemp
docker run -e VIRTUAL_HOST=jos.cninone.com -v /data/team/jos:/data -p 24022:22 -d --name jos -t novice/lemp
docker run -e VIRTUAL_HOST=guoyu.cninone.com -v /data/team/guoyu:/data -p 25022:22 -d --name guoyu -t novice/lemp
docker run -e VIRTUAL_HOST=oc.cninone.com -v /data/team/oc:/data -p 30022:22 -d --name oc -t novice/lemp
docker save novice/lemp | xz > lemp.tar.xz
docker load -i lemp.tar.xz

echo "
rdr pass inet proto tcp from any to any port 80 -> 192.168.99.102 port 80
rdr pass inet proto tcp from any to any port 443 -> 192.168.99.102 port 443
" | sudo pfctl -ef -
//remove pf
sudo pfctl -F all -f /etc/pf.conf
//ls pf
sudo pfctl -s nat

sudo usermod -aG docker username
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/novice79

docker run --privileged -it ubuntu bash

weave launch --ipalloc-range 172.79.0.0/16
weave launch --ipalloc-range 172.79.0.0/16 120.25.64.88
CONTAINER=`weave run 172.79.1.3/16 -t -i weaveworks/weave-gs-centos-bash`
eval "$(docker-machine env default)"

docker run -it --rm -p 443:443 -p 80:80 --name letsencrypt \
-v "/etc/letsencrypt:/etc/letsencrypt" \
-v "/var/lib/letsencrypt:/var/lib/letsencrypt" \
novice/letsencrypt:latest bash


cd /letsencrypt/letsencrypt && ./letsencrypt-auto certonly --standalone --agree-tos --email david@cninone.com -d novice.ren

//if report -i docker0: iptables: No chain/target/match by that name.
*nat
:PREROUTING ACCEPT [27:11935]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [598:57368]
:POSTROUTING ACCEPT [591:57092]
:DOCKER - [0:0]
-A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER
-A OUTPUT ! -d 127.0.0.0/8 -m addrtype --dst-type LOCAL -j DOCKER
-A POSTROUTING -s 172.17.0.0/16 ! -o docker0 -j MASQUERADE
COMMIT  
# Completed on Sun Sep 20 17:35:31 2015
# Generated by iptables-save v1.4.21 on Sun Sep 20 17:35:31 2015
*filter
:INPUT ACCEPT [139291:461018923]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [127386:5251162]
:DOCKER - [0:0]
-A FORWARD -o docker0 -j DOCKER
-A FORWARD -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A FORWARD -i docker0 ! -o docker0 -j ACCEPT
-A FORWARD -i docker0 -o docker0 -j ACCEPT
COMMIT  
# Completed on Sun Sep 20 17:35:31 2015
